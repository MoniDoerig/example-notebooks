# This workflows executes new or modified example notebooks.

name: test_changed_notebooks

defaults:
  run:
    shell: bash  # To override PowerShell on Windows

on:
  # Trigger the workflow on push or PR to any branch
  push:
    paths:
      - '**/*.ipynb'
  pull_request:
    paths:
      - 'doc/source/examples/**/*.ipynb'
    # don't trigger for draft PRs
    types: [ opened, synchronize, reopened, ready_for_review ]
  # Trigger the workflow on manual dispatch
  workflow_dispatch:

jobs:
  test_changed_notebooks:
    if: github.event.pull_request.draft == false

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.7', '3.8', '3.9', '3.10' ]
        include: # Run macos and windows tests on only one python version
          - os: windows-latest
            python-version: '3.9'  # PyTorch doesn't yet have 3.10 support on Windows (https://pytorch.org/get-started/locally/#windows-python)
          - os: macos-latest
            python-version: '3.10'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for new or changed .ipynb files
        id: changed-ipynb
        uses: tj-actions/changed-files@v1.1.2
        with:
          files: |
            **/*.ipynb

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |

            export LD_PRELOAD=""
            export APPTAINER_BINDPATH="/content"
            export MPLCONFIGDIR="/content/matplotlib-mpldir"
            export LMOD_CMD="/usr/share/lmod/lmod/libexec/lmod"
            export MODULEPATH=$(find /cvmfs/neurodesk.ardc.edu.au/neurodesk-modules/ -mindepth 1 -maxdepth 1 -type d -printf "%p:" | sed 's/:$//')
            
            curl -J -O https://raw.githubusercontent.com/NeuroDesk/neurocommand/main/googlecolab_setup.sh
            chmod +x googlecolab_setup.sh
            ./googlecolab_setup.sh
        

      - name: Run notebooks
        run: |
            pytest --suppress-no-test-exit-code --no-cov -rA --durations=0 -vv -p no:randomly test_notebooks.py